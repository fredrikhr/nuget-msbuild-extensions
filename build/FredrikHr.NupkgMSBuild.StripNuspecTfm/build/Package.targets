<?xml version="1.0" encoding="UTF-8"?>
<Project>

  <PropertyGroup>
    <PackDependsOn>$(PackDependsOn);GenerateNupkg</PackDependsOn>
  </PropertyGroup>

  <Target
    Name="EnforceSeparateGenerateNuspecAndNupkgPackTargets"
    DependsOnTargets="_IntermediatePack"
    BeforeTargets="GenerateNuspec"
  >
    <PropertyGroup>
      <ContinuePackingAfterGeneratingNuspec>false</ContinuePackingAfterGeneratingNuspec>
    </PropertyGroup>
  </Target>

  <Target
    Name="StripTfmFromGeneratedNuspec"
    Condition="'$(GenerateNuspecStripTargetFrameworkAttributes)' == 'true'"
    DependsOnTargets="GenerateNuspec"
    Inputs="@(NuGetPackOutput->WithMetadataValue('Extension', '.nuspec'))"
    Outputs="@(NuGetPackOutput->WithMetadataValue('Extension', '.nupkg'))"
  >
    <ItemGroup>
      <_GeneratedWithTfmNuspec Include="@(NuGetPackOutput->WithMetadataValue('Extension', '.nuspec'))" Condition="Exists('%(FullPath)')" />
      <_IntermediateTfmAgnosticNuspec Include="@(_GeneratedWithTfmNuspec->'%(RootDir)%(Directory)%(Filename).no-tfm%(Extension)')" />
    </ItemGroup>

    <PropertyGroup>
      <_NuspecStripTargetFrameworkXsl>
        <xsl:stylesheet version="1.0"
          xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
          xmlns:ns="http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd"
        >
          <!--empty template suppresses match-->
          <xsl:template match="/ns:package/ns:metadata/ns:dependencies/ns:group/@targetFramework" />
          <!--identity template copies everything forward by default-->
          <xsl:template match="@*|node()">
            <xsl:copy>
              <xsl:apply-templates select="@*|node()"/>
            </xsl:copy>
          </xsl:template>
        </xsl:stylesheet>
      </_NuspecStripTargetFrameworkXsl>
    </PropertyGroup>

    <XslTransformation
      XmlInputPaths="@(_GeneratedWithTfmNuspec)"
      OutputPaths="@(_IntermediateTfmAgnosticNuspec)"
      XslContent="$(_NuspecStripTargetFrameworkXsl)"
    />

    <Move
      SourceFiles="@(_IntermediateTfmAgnosticNuspec)"
      DestinationFiles="@(_GeneratedWithTfmNuspec)">
      <Output TaskParameter="MovedFiles" ItemName="_TfmAgnosticNuspec" />
    </Move>

    <ItemGroup>
      <!-- Cleanup intermeditate items  -->
      <_GeneratedWithTfmNuspec Remove="@(_GeneratedWithTfmNuspec)" />
      <_IntermediateTfmAgnosticNuspec Remove="@(_IntermediateTfmAgnosticNuspec)" />
    </ItemGroup>
  </Target>

  <Target
    Name="GenerateNupkg"
    DependsOnTargets="StripTfmFromGeneratedNuspec"
    Inputs="@(NuGetPackOutput->WithMetadataValue('Extension', '.nuspec'))"
    Outputs="@(NuGetPackOutput->WithMetadataValue('Extension', '.nupkg'))"
  >
    <ConvertToAbsolutePath Paths="@(NuGetPackOutput->WithMetadataValue('Extension', '.nuspec'))">
      <Output TaskParameter="AbsolutePaths" PropertyName="NuspecFileAbsolutePath" />
    </ConvertToAbsolutePath>
    <PackTask
      PackItem="$(PackProjectInputFile)"
      PackageId="$(PackageId)"
      PackageVersion="$(PackageVersion)"
      PackageOutputPath="$(PackageOutputAbsolutePath)"
      NuspecFile="$(NuspecFileAbsolutePath)"
      NuspecOutputPath="$(NuspecOutputAbsolutePath)"
      NoWarn="$(NoWarn)"
      WarningsAsErrors="$(WarningsAsErrors)"
      WarningsNotAsErrors="$(WarningsNotAsErrors)"
      TreatWarningsAsErrors="$(TreatWarningsAsErrors)"
      InstallPackageToOutputPath="$(InstallPackageToOutputPath)"
      RestoreOutputPath="$(RestoreOutputAbsolutePath)"
      SymbolPackageFormat="$(SymbolPackageFormat)"
    />
  </Target>

</Project>
